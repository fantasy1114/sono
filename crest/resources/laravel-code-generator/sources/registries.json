{
    "fields": [
        {
            "name": "Registry_ID",
            "labels": {
                "en": "Registry",
                "ru": "Registry",
                "lv": "Registry"
            },
            "html-type": "select",
            "css-class": "",
            "options": {},
            "html-value": null,
            "validation": "",
            "is-on-index": false,
            "is-on-show": false,
            "is-on-form": false,
            "data-type": "int",
            "data-type-params": [],
            "data-value": null,
            "is-index": true,
            "is-unique": false,
            "is-primary": true,
            "comment": null,
            "is-nullable": false,
            "is-header": false,
            "is-unsigned": true,
            "is-auto-increment": true,
            "is-inline-options": false,
            "is-date": false,
            "date-format": "",
            "cast-as": "",
            "placeholder": {
                "en": "Select registry",
                "ru": "Select registry",
                "lv": "Select registry"
            },
            "delimiter": "; ",
            "range": [],
            "foreign-relation": {
                "name": "registry",
                "type": "belongsTo",
                "params": [
                    "App\\Models\\Registry",
                    "Registry_ID"
                ],
                "field": "Key_Name"
            },
            "foreign-constraint": null,
            "on-store": null,
            "on-update": null,
            "api-key": "Registry_ID",
            "is-api-visible": true,
            "api-description": {
                "en": "The registry of the model.",
                "ru": "The registry of the model.",
                "lv": "The registry of the model."
            }
        },
        {
            "name": "Key_Name",
            "labels": {
                "en": "Key  Name",
                "ru": "Key  Name",
                "lv": "Key  Name"
            },
            "html-type": "text",
            "css-class": "",
            "options": {},
            "html-value": null,
            "validation": "required|string|min:1|max:32",
            "is-on-index": true,
            "is-on-show": true,
            "is-on-form": true,
            "data-type": "string",
            "data-type-params": [
                32
            ],
            "data-value": null,
            "is-index": false,
            "is-unique": false,
            "is-primary": false,
            "comment": null,
            "is-nullable": false,
            "is-header": false,
            "is-unsigned": false,
            "is-auto-increment": false,
            "is-inline-options": false,
            "is-date": false,
            "date-format": "",
            "cast-as": "",
            "placeholder": {
                "en": "Enter key  name here...",
                "ru": "Enter key  name here...",
                "lv": "Enter key  name here..."
            },
            "delimiter": "; ",
            "range": [],
            "foreign-relation": null,
            "foreign-constraint": null,
            "on-store": null,
            "on-update": null,
            "api-key": "Key_Name",
            "is-api-visible": true,
            "api-description": {
                "en": "The key  name of the model.",
                "ru": "The key  name of the model.",
                "lv": "The key  name of the model."
            }
        },
        {
            "name": "Action",
            "labels": {
                "en": "Action",
                "ru": "Action",
                "lv": "Action"
            },
            "html-type": "number",
            "css-class": "",
            "options": {},
            "html-value": null,
            "validation": "required",
            "is-on-index": true,
            "is-on-show": true,
            "is-on-form": true,
            "data-type": "int",
            "data-type-params": [],
            "data-value": null,
            "is-index": false,
            "is-unique": false,
            "is-primary": false,
            "comment": null,
            "is-nullable": false,
            "is-header": false,
            "is-unsigned": false,
            "is-auto-increment": false,
            "is-inline-options": false,
            "is-date": false,
            "date-format": "",
            "cast-as": "",
            "placeholder": {
                "en": "Enter action here...",
                "ru": "Enter action here...",
                "lv": "Enter action here..."
            },
            "delimiter": "; ",
            "range": [],
            "foreign-relation": null,
            "foreign-constraint": null,
            "on-store": null,
            "on-update": null,
            "api-key": "Action",
            "is-api-visible": true,
            "api-description": {
                "en": "The action of the model.",
                "ru": "The action of the model.",
                "lv": "The action of the model."
            }
        },
        {
            "name": "Action_Time",
            "labels": {
                "en": "Action  Time",
                "ru": "Action  Time",
                "lv": "Action  Time"
            },
            "html-type": "text",
            "css-class": "",
            "options": {},
            "html-value": null,
            "validation": "required|date_format:j/n/Y g:i A",
            "is-on-index": true,
            "is-on-show": true,
            "is-on-form": true,
            "data-type": "timestamp",
            "data-type-params": [],
            "data-value": "CURRENT_TIMESTAMP",
            "is-index": false,
            "is-unique": false,
            "is-primary": false,
            "comment": null,
            "is-nullable": false,
            "is-header": false,
            "is-unsigned": false,
            "is-auto-increment": false,
            "is-inline-options": false,
            "is-date": false,
            "date-format": "j/n/Y g:i A",
            "cast-as": "",
            "placeholder": {
                "en": "Enter action  time here...",
                "ru": "Enter action  time here...",
                "lv": "Enter action  time here..."
            },
            "delimiter": "; ",
            "range": [],
            "foreign-relation": null,
            "foreign-constraint": null,
            "on-store": null,
            "on-update": null,
            "api-key": "Action_Time",
            "is-api-visible": true,
            "api-description": {
                "en": "The action  time of the model.",
                "ru": "The action  time of the model.",
                "lv": "The action  time of the model."
            }
        },
        {
            "name": "Battery_State",
            "labels": {
                "en": "Battery  State",
                "ru": "Battery  State",
                "lv": "Battery  State"
            },
            "html-type": "number",
            "css-class": "",
            "options": {},
            "html-value": null,
            "validation": "required|numeric|min:-99999999.99|max:99999999.99",
            "is-on-index": true,
            "is-on-show": true,
            "is-on-form": true,
            "data-type": "decimal",
            "data-type-params": [
                10,
                2
            ],
            "data-value": null,
            "is-index": false,
            "is-unique": false,
            "is-primary": false,
            "comment": null,
            "is-nullable": false,
            "is-header": false,
            "is-unsigned": false,
            "is-auto-increment": false,
            "is-inline-options": false,
            "is-date": false,
            "date-format": "",
            "cast-as": "",
            "placeholder": {
                "en": "Enter battery  state here...",
                "ru": "Enter battery  state here...",
                "lv": "Enter battery  state here..."
            },
            "delimiter": "; ",
            "range": [],
            "foreign-relation": null,
            "foreign-constraint": null,
            "on-store": null,
            "on-update": null,
            "api-key": "Battery_State",
            "is-api-visible": true,
            "api-description": {
                "en": "The battery  state of the model.",
                "ru": "The battery  state of the model.",
                "lv": "The battery  state of the model."
            }
        }
    ],
    "relations": [],
    "indexes": [],
    "auto-manage-created-and-updated-at": false,
    "table-name": "Registry",
    "protection": {
        "is-model-protected": false,
        "is-controller-protected": false,
        "is-api-resource-protected": false,
        "is-api-resource-collection-protected": false,
        "is-api-documentation-protected": false,
        "is-api-documentation-controller-protected": false,
        "is-form-request-protected": false,
        "is-languages-protected": false,
        "is-form-view-protected": false,
        "is-index-view-protected": false,
        "is-create-view-protected": false,
        "is-edit-view-protected": false,
        "is-show-view-protected": false
    },
    "api-documentation": {
        "access_token_with_bearer": {
            "en": "The access token prefixed with the \"Bearer \" key word.",
            "ru": "The access token prefixed with the \"Bearer \" key word.",
            "lv": "The access token prefixed with the \"Bearer \" key word."
        },
        "index_route_description": {
            "en": "Retrieve existing registries.",
            "ru": "Retrieve existing registries.",
            "lv": "Retrieve existing registries."
        },
        "index_route_response_description": {
            "en": "The API's response will be JSON based data. The JSON object will be structured as follow",
            "ru": "The API's response will be JSON based data. The JSON object will be structured as follow",
            "lv": "The API's response will be JSON based data. The JSON object will be structured as follow"
        },
        "the_key_is_the_model_property_and_the_value_is_the_model_value": {
            "en": "The array's key is the registry property name where the value is the assigned value to the retrieved registry.",
            "ru": "The array's key is the registry property name where the value is the assigned value to the retrieved registry.",
            "lv": "The array's key is the registry property name where the value is the assigned value to the retrieved registry."
        },
        "link_to_retrieve_first_page": {
            "en": "Link to retrieve first page.",
            "ru": "Link to retrieve first page.",
            "lv": "Link to retrieve first page."
        },
        "link_to_retrieve_last_page": {
            "en": "Link to retrieve last page.",
            "ru": "Link to retrieve last page.",
            "lv": "Link to retrieve last page."
        },
        "link_to_retrieve_previous_page": {
            "en": "Link to retrieve previous page.",
            "ru": "Link to retrieve previous page.",
            "lv": "Link to retrieve previous page."
        },
        "link_to_retrieve_next_page": {
            "en": "Link to retrieve next page.",
            "ru": "Link to retrieve next page.",
            "lv": "Link to retrieve next page."
        },
        "the_number_of_current_page": {
            "en": "The number of current page.",
            "ru": "The number of current page.",
            "lv": "The number of current page."
        },
        "the_index_of_the_first_retrieved_item": {
            "en": "The index of first retrieved registry.",
            "ru": "The index of first retrieved registry.",
            "lv": "The index of first retrieved registry."
        },
        "the_number_of_the_last_page": {
            "en": "The number of the last page.",
            "ru": "The number of the last page.",
            "lv": "The number of the last page."
        },
        "the_base_link_to_the_resource": {
            "en": "The base link to the api resource.",
            "ru": "The base link to the api resource.",
            "lv": "The base link to the api resource."
        },
        "the_number_of_models_per_page": {
            "en": "The number of registries per page.",
            "ru": "The number of registries per page.",
            "lv": "The number of registries per page."
        },
        "the_index_of_the_last_retrieved_item": {
            "en": "The index of last retrieved registry.",
            "ru": "The index of last retrieved registry.",
            "lv": "The index of last retrieved registry."
        },
        "the_total_of_available_pages": {
            "en": "The total of the available pages.",
            "ru": "The total of the available pages.",
            "lv": "The total of the available pages."
        },
        "store_route_description": {
            "en": "Create new registry.",
            "ru": "Create new registry.",
            "lv": "Create new registry."
        },
        "store_route_response_description": {
            "en": "The API's response will be JSON based data. The JSON object will be structured as follow",
            "ru": "The API's response will be JSON based data. The JSON object will be structured as follow",
            "lv": "The API's response will be JSON based data. The JSON object will be structured as follow"
        },
        "update_route_description": {
            "en": "Update existsing registry.",
            "ru": "Update existsing registry.",
            "lv": "Update existsing registry."
        },
        "update_route_response_description": {
            "en": "The API's response will be JSON based data. The JSON object will be structured as follow",
            "ru": "The API's response will be JSON based data. The JSON object will be structured as follow",
            "lv": "The API's response will be JSON based data. The JSON object will be structured as follow"
        },
        "show_route_description": {
            "en": "Retrieve existsing registry.",
            "ru": "Retrieve existsing registry.",
            "lv": "Retrieve existsing registry."
        },
        "show_route_response_description": {
            "en": "The API's response will be JSON based data. The JSON object will be structured as follow",
            "ru": "The API's response will be JSON based data. The JSON object will be structured as follow",
            "lv": "The API's response will be JSON based data. The JSON object will be structured as follow"
        },
        "the_id_of_model_to_retrieve": {
            "en": "The unique id of the registry to retrieve",
            "ru": "The unique id of the registry to retrieve",
            "lv": "The unique id of the registry to retrieve"
        },
        "destroy_route_description": {
            "en": "Delete existsing registry.",
            "ru": "Delete existsing registry.",
            "lv": "Delete existsing registry."
        },
        "destroy_route_response_description": {
            "en": "The API's response will be JSON based data. The JSON object will be structured as follow",
            "ru": "The API's response will be JSON based data. The JSON object will be structured as follow",
            "lv": "The API's response will be JSON based data. The JSON object will be structured as follow"
        },
        "the_id_of_model_to_delete": {
            "en": "The id of the registry to delete.",
            "ru": "The id of the registry to delete.",
            "lv": "The id of the registry to delete."
        },
        "general_description": {
            "en": "Allows you to list, create, edit, show and delete registries.",
            "ru": "Allows you to list, create, edit, show and delete registries.",
            "lv": "Allows you to list, create, edit, show and delete registries."
        },
        "indicate_whether_the_request_was_successful_or_not": {
            "en": "Indicate whether the request was successful or not.",
            "ru": "Indicate whether the request was successful or not.",
            "lv": "Indicate whether the request was successful or not."
        },
        "the_id_of_the_model": {
            "en": "The id of the registry.",
            "ru": "The id of the registry.",
            "lv": "The id of the registry."
        },
        "this_parameter_must_be_present_in_the_request": {
            "en": "This parameter must be present in the request.",
            "ru": "This parameter must be present in the request.",
            "lv": "This parameter must be present in the request."
        },
        "the_request_failed_validation": {
            "en": "The request failed validation.",
            "ru": "The request failed validation.",
            "lv": "The request failed validation."
        },
        "list_of_the_invalid_errors": {
            "en": "List of the invalid errors.",
            "ru": "List of the invalid errors.",
            "lv": "List of the invalid errors."
        },
        "the_requested_model_does_not_exists": {
            "en": "The requested registry does not exists.",
            "ru": "The requested registry does not exists.",
            "lv": "The requested registry does not exists."
        },
        "the_user_does_not_have_permission_to_access_the_requested_resource": {
            "en": "User does not have permission to access the requested resource.",
            "ru": "User does not have permission to access the requested resource.",
            "lv": "User does not have permission to access the requested resource."
        }
    }
}